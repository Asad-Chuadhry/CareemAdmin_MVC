@model CareemAdminMVC.User

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Login V14</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    @Styles.Render("~/Content/login/css")
</head>
<body >

    <div class="limiter bg-secondary">
        <div class="container-login100 bg-secondary">
            <div class="wrap-login100 p-l-85 p-r-85 p-t-55 p-b-55">
                <span class="login100-form-title p-b-32">
                    Welcome to <br /> Careem Admin
                </span>
                @using (Html.BeginForm("Login", "User", FormMethod.Post))
                {
                    @Html.ValidationSummary(true)
                    @Html.AntiForgeryToken()
                    if (@ViewBag.Message != null)
                    {
                        <div style="border: 1px solid red">
                            @ViewBag.Message
                        </div>
                    }
                    @Html.LabelFor(model =>  model.EmailID, new { @class = "col-sm-3 col-form-label text-primary font-weight-bold font-weight-italic" })
                    <div class="wrap-input100 m-b-36">
                        @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control input100", @placeholder = "example@email.com" })
                        @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                        <span class="focus-input100"></span>
                    </div>
                    @Html.LabelFor(model => model.Password, new { @class = "col-sm-2 col-form-label text-primary font-weight-bold font-weight-italic" })
                    <div class="wrap-input100 validate-input m-b-36" data-validate="password is required">
                        <span class="btn-show-pass">
                            <i class="fa fa-eye"></i>
                        </span>
                        @Html.TextBoxFor(model => model.Password, new {@type="password", @class = "form-control input100", @placeholder = "password" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        <span class="focus-input100"></span>
                    </div>
                    
                    <div class="container-login100-form-btn">
                        <button type="submit" class="login100-form-btn">
                            Login
                        </button>
                    </div>
                    
                }

            </div>
        </div>
    </div>


    <div id="dropDownSelect1"></div>

    @Scripts.Render("~/bundles/login/bootstrap")
    @Scripts.Render("~/bundles/jqueryval")
    

</body>
</html>